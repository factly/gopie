services:
  #########################################################################
  #####                        DATABASE                                 #####
  #########################################################################
  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=gopie
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - gopie_network

  #########################################################################
  #####                        GOPIE SERVICES                          #####
  #########################################################################
  gopie1:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./config.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gopie_network

  gopie2:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./config.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gopie_network

  gopie3:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: ./config.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - gopie_network

  #########################################################################
  #####                        NGINX LOAD BALANCER                     #####
  #########################################################################
  nginx:
    image: nginx:latest
    ports:
      - "8000:8080"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - gopie1
      - gopie2
      - gopie3
    networks:
      - gopie_network

networks:
  gopie_network:
    name: gopie_network
    driver: bridge

volumes:
  postgres_data:
    name: gopie_postgres_data
