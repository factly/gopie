{
  "info": {
    "name": "Downloads Server API",
    "description": "API for managing data export downloads with support for SQL queries and multiple formats",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "bearer",
    "bearer": [
      {
        "key": "token",
        "value": "{{jwt_token}}",
        "type": "string"
      }
    ]
  },
  "variable": [
    {
      "key": "base_url",
      "value": "http://localhost:8000",
      "type": "string"
    },
    {
      "key": "jwt_token",
      "value": "",
      "type": "string"
    },
    {
      "key": "user_id",
      "value": "user_123",
      "type": "string"
    },
    {
      "key": "org_id",
      "value": "org_456",
      "type": "string"
    },
    {
      "key": "download_id",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Health",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/health",
              "host": ["{{base_url}}"],
              "path": ["health"]
            },
            "description": "Check if the service is running"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Downloads",
      "item": [
        {
          "name": "Create Download Job",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "// Parse SSE response",
                  "const responseText = pm.response.text();",
                  "const lines = responseText.split('\\n');",
                  "",
                  "lines.forEach(line => {",
                  "    if (line.startsWith('data: ')) {",
                  "        try {",
                  "            const data = JSON.parse(line.substring(6));",
                  "            if (data.id) {",
                  "                pm.collectionVariables.set('download_id', data.id);",
                  "                console.log('Download ID saved:', data.id);",
                  "            }",
                  "        } catch (e) {",
                  "            // Not JSON, skip",
                  "        }",
                  "    }",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "x-user-id",
                "value": "{{user_id}}",
                "type": "text"
              },
              {
                "key": "x-organization-id",
                "value": "{{org_id}}",
                "type": "text"
              },
              {
                "key": "Content-Type",
                "value": "application/json",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"dataset_id\": \"dataset_123\",\n  \"sql\": \"SELECT * FROM sales WHERE year = 2024 LIMIT 100\",\n  \"format\": \"csv\"\n}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{base_url}}/downloads",
              "host": ["{{base_url}}"],
              "path": ["downloads"]
            },
            "description": "Submit a SQL query to create a new download job. Returns Server-Sent Events (SSE) stream for real-time progress updates."
          },
          "response": []
        },
        {
          "name": "List Download Jobs",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-user-id",
                "value": "{{user_id}}",
                "type": "text"
              },
              {
                "key": "x-organization-id",
                "value": "{{org_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/downloads?limit=10&offset=0",
              "host": ["{{base_url}}"],
              "path": ["downloads"],
              "query": [
                {
                  "key": "limit",
                  "value": "10",
                  "description": "Number of items to return (1-100)"
                },
                {
                  "key": "offset",
                  "value": "0",
                  "description": "Number of items to skip"
                }
              ]
            },
            "description": "Retrieve a paginated list of all download jobs for the authenticated user"
          },
          "response": []
        },
        {
          "name": "Get Download Job Details",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "x-organization-id",
                "value": "{{org_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/downloads/{{download_id}}",
              "host": ["{{base_url}}"],
              "path": ["downloads", "{{download_id}}"]
            },
            "description": "Retrieve the details of a specific download job"
          },
          "response": []
        },
        {
          "name": "Delete Download Job",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "x-organization-id",
                "value": "{{org_id}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{base_url}}/downloads/{{download_id}}",
              "host": ["{{base_url}}"],
              "path": ["downloads", "{{download_id}}"]
            },
            "description": "Delete a download job record and associated data"
          },
          "response": []
        }
      ]
    }
  ]
}