# syntax=docker.io/docker/dockerfile:1

FROM node:18-alpine

WORKDIR /app

# Install bun
RUN apk add --no-cache unzip curl bash && \
    curl -fsSL https://bun.sh/install | bash && \
    ln -s $HOME/.bun/bin/bun /usr/local/bin/bun

# Install dependencies based on the preferred package manager
COPY package.json yarn.lock* package-lock.json* pnpm-lock.yaml* .npmrc* bun.lockb* ./
# Omit --production flag for TypeScript devDependencies
RUN bun install

COPY . .

# Accept build arguments
ARG NEXT_PUBLIC_COMPANION_URL
ARG NEXT_PUBLIC_GOPIE_API_URL
ARG GOPIE_API_URL
ARG NEXT_PUBLIC_ENABLE_AUTH
ARG ZITADEL_AUTHORITY
ARG ZITADEL_CLIENT_ID
ARG ZITADEL_CLIENT_SECRET
ARG ZITADEL_PROJECT_ID
ARG ZITADEL_PAT
ARG ZITADEL_IDP_ID

# Set environment variables from build arguments
ENV NEXT_PUBLIC_COMPANION_URL=$NEXT_PUBLIC_COMPANION_URL
ENV NEXT_PUBLIC_GOPIE_API_URL=$NEXT_PUBLIC_GOPIE_API_URL
ENV GOPIE_API_URL=$GOPIE_API_URL
ENV NEXT_PUBLIC_ENABLE_AUTH=$NEXT_PUBLIC_ENABLE_AUTH
ENV ZITADEL_AUTHORITY=$ZITADEL_AUTHORITY
ENV ZITADEL_CLIENT_ID=$ZITADEL_CLIENT_ID
ENV ZITADEL_CLIENT_SECRET=$ZITADEL_CLIENT_SECRET
ENV ZITADEL_PROJECT_ID=$ZITADEL_PROJECT_ID
ENV ZITADEL_PAT=$ZITADEL_PAT
ENV ZITADEL_IDP_ID=$ZITADEL_IDP_ID
ENV NEXT_TELEMETRY_DISABLED=1

# Build Next.js based on the preferred package manager
RUN \
    if [ -f yarn.lock ]; then yarn build; \
    elif [ -f package-lock.json ]; then npm run build; \
    elif [ -f pnpm-lock.yaml ]; then pnpm build; \
    elif [ -f bun.lockb ]; then bun run build; \
    else bun run build; \
    fi

# Start Next.js based on the preferred package manager
CMD \
    if [ -f yarn.lock ]; then yarn start; \
    elif [ -f package-lock.json ]; then npm run start; \
    elif [ -f pnpm-lock.yaml ]; then pnpm start; \
    elif [ -f bun.lockb ]; then bun run start; \
    else bun run start; \
    fi
