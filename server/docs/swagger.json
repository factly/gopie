{
    "swagger": "2.0",
    "info": {
        "description": "GoPie API documentation",
        "title": "GoPie API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/source/database/upload": {
            "post": {
                "description": "Create a new dataset from a Postgres database query",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "database"
                ],
                "summary": "Create dataset from Postgres",
                "parameters": [
                    {
                        "description": "Create request parameters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.createRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Dataset"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or database connection error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/source/s3/update": {
            "post": {
                "description": "Update an existing dataset with a new file from S3",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "s3"
                ],
                "summary": "Update dataset from S3",
                "parameters": [
                    {
                        "description": "Update request parameters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/s3.updateRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Dataset"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or S3 file access error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/source/s3/upload": {
            "post": {
                "description": "Upload a file from S3 and create a new dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "s3"
                ],
                "summary": "Upload file from S3",
                "parameters": [
                    {
                        "description": "Upload request parameters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/s3.uploadRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Dataset"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body or S3 file access error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/summary/{tableName}": {
            "get": {
                "description": "Retrieves a summary of the specified dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dataset"
                ],
                "summary": "Get dataset summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the table to get summary for",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dataset summary information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Invalid query or table not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/v1/api/chats": {
            "get": {
                "description": "Get all chats associated with a specific dataset with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "List dataset chats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "dataset_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of chats per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Dataset chats retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Chat"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Dataset ID is required",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new chat or continue an existing chat conversation with AI about a dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Create or continue chat",
                "parameters": [
                    {
                        "description": "Chat request parameters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chats.chatRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Chat created/continued successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.ChatWithMessages"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/chats/agent": {
            "post": {
                "description": "Create a streaming chat conversation with an AI agent about datasets or projects",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/event-stream"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Chat with AI agent",
                "parameters": [
                    {
                        "description": "Chat request parameters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/chats.chatWithAgentRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Server-sent events stream started",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/api/chats/{chatID}": {
            "delete": {
                "description": "Delete an entire chat and all its messages",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Delete chat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Chat deleted successfully"
                    },
                    "404": {
                        "description": "Chat not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/chats/{chatID}/messages": {
            "get": {
                "description": "Get all messages from a specific chat with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Get chat messages",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of messages per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Chat messages retrieved successfully",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.ChatMessage"
                                            }
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/chats/{chatID}/messages/{messageID}": {
            "delete": {
                "description": "Delete a specific message from a chat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "chats"
                ],
                "summary": "Delete chat message",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Chat ID",
                        "name": "chatID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Message ID",
                        "name": "messageID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Message deleted successfully"
                    },
                    "404": {
                        "description": "Message not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/datasets/{datasetID}": {
            "get": {
                "description": "Get details of a specific dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Get dataset details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "datasetID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Dataset"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/nl2sql": {
            "post": {
                "description": "Convert a natural language query to SQL for a specific dataset",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Convert natural language to SQL",
                "parameters": [
                    {
                        "description": "Natural language query request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.nl2SqlRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Generated SQL query",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request or could not generate SQL",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Table not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/projects": {
            "get": {
                "description": "Get all projects with pagination and search",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "List all projects",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search query",
                        "name": "query",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Project"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "No projects found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new project with the given name and description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Create a new project",
                "parameters": [
                    {
                        "description": "Project object",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/projects.createRequestBody"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Project"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/projects/{projectID}": {
            "get": {
                "description": "Get details of a specific project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Get project details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Project"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an existing project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Delete a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "patch": {
                "description": "Update an existing project's name and/or description",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "projects"
                ],
                "summary": "Update a project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project object",
                        "name": "project",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/projects.updateProjectBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Project"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/projects/{projectID}/datasets": {
            "get": {
                "description": "Get all datasets in a project with pagination",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "List project datasets",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "Number of items per page",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Dataset"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Project not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/projects/{projectID}/datasets/{datasetID}": {
            "get": {
                "description": "Get details of a specific dataset in a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Get dataset details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "datasetID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Dataset"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an existing dataset information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Update dataset",
                "operationId": "update-dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "datasetID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Dataset update parameters",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datasets.updateDatasetParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/responses.SuccessResponse"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "data": {
                                            "$ref": "#/definitions/models.Dataset"
                                        }
                                    }
                                }
                            ]
                        }
                    },
                    "400": {
                        "description": "Invalid request body",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a dataset from a project",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "datasets"
                ],
                "summary": "Delete dataset",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project ID",
                        "name": "projectID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Dataset ID",
                        "name": "datasetID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "404": {
                        "description": "Dataset not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/schemas/{tableName}": {
            "get": {
                "description": "Get the schemas information for a dataset/table",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Get table schemas",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the dataset/table",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Schema information",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Invalid table name",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/sql": {
            "post": {
                "description": "Execute a SQL query on a dataset (only SELECT statements are allowed)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Execute SQL query",
                "parameters": [
                    {
                        "description": "SQL query",
                        "name": "query",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.sqlRequestBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Query results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid SQL query",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "403": {
                        "description": "Non-SELECT statement",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Table not found",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/api/tables/{tableName}": {
            "get": {
                "description": "Query a dataset using REST-style parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "query"
                ],
                "summary": "Query dataset using REST API",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Name of the dataset/table",
                        "name": "tableName",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Comma-separated list of columns to return",
                        "name": "columns",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort order (column name with optional -prefix for desc)",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Number of records to return",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Query results",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid query parameters",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "$ref": "#/definitions/responses.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.nl2SqlRequest": {
            "description": "Request body for converting natural language to SQL",
            "type": "object",
            "required": [
                "query",
                "table"
            ],
            "properties": {
                "query": {
                    "description": "Natural language query to convert to SQL",
                    "type": "string",
                    "minLength": 3,
                    "example": "show me total sales by region"
                },
                "table": {
                    "description": "Name of the dataset/table to query",
                    "type": "string",
                    "example": "sales_data"
                }
            }
        },
        "api.sqlRequestBody": {
            "description": "Request body for executing a SQL query",
            "type": "object",
            "required": [
                "query"
            ],
            "properties": {
                "query": {
                    "description": "SQL query to execute (only SELECT statements are allowed)",
                    "type": "string",
                    "minLength": 1,
                    "example": "SELECT * FROM sales_data WHERE value \u003e 1000"
                }
            }
        },
        "chats.chatRequestBody": {
            "description": "Request body for creating or continuing a chat conversation",
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "chat_id": {
                    "description": "Unique identifier of an existing chat (optional for new chats)",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "created_by": {
                    "description": "User ID of the creator",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "dataset_id": {
                    "description": "ID of the dataset to analyze",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "messages": {
                    "description": "Array of chat messages",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "required": [
                            "content",
                            "role"
                        ],
                        "properties": {
                            "content": {
                                "description": "Message content",
                                "type": "string",
                                "example": "Show me the total sales by region"
                            },
                            "role": {
                                "description": "Message role (user/assistant)",
                                "type": "string",
                                "example": "user"
                            }
                        }
                    }
                }
            }
        },
        "chats.chatWithAgentRequestBody": {
            "description": "Request body for creating a streaming chat conversation with an AI agent",
            "type": "object",
            "required": [
                "messages"
            ],
            "properties": {
                "chat_id": {
                    "description": "Chat ID for the conversation (optional)",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "dataset_ids": {
                    "description": "Array of dataset IDs to analyze",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['550e8400-e29b-41d4-a716-446655440000']"
                    ]
                },
                "messages": {
                    "description": "Array of chat messages",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.AIChatMessage"
                    }
                },
                "project_ids": {
                    "description": "Array of project IDs to analyze",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "example": [
                        "['550e8400-e29b-41d4-a716-446655440000']"
                    ]
                }
            }
        },
        "database.createRequestBody": {
            "description": "Request body for creating a database source dataset",
            "type": "object",
            "required": [
                "alias",
                "connection_string",
                "created_by",
                "driver",
                "project_id",
                "sql_query"
            ],
            "properties": {
                "alias": {
                    "description": "Alias of the dataset",
                    "type": "string",
                    "minLength": 3,
                    "example": "users_data"
                },
                "connection_string": {
                    "description": "Connection string for the Postgres database",
                    "type": "string",
                    "example": "postgres://username:password@localhost:5432/database"
                },
                "created_by": {
                    "description": "User ID of the creator",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "description": {
                    "description": "Description of the dataset",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 10,
                    "example": "User data from our production database"
                },
                "driver": {
                    "description": "Driver of the database",
                    "type": "string",
                    "enum": [
                        "postgres",
                        "mysql"
                    ],
                    "example": "postgres"
                },
                "project_id": {
                    "description": "ID of the project to add the dataset to",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "sql_query": {
                    "description": "SQL query to execute",
                    "type": "string",
                    "example": "SELECT * FROM users"
                }
            }
        },
        "datasets.updateDatasetParams": {
            "type": "object",
            "required": [
                "updated_by"
            ],
            "properties": {
                "alias": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "updated_by": {
                    "type": "string"
                }
            }
        },
        "models.AIChatMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "models.Chat": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ChatMessage": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            }
        },
        "models.ChatWithMessages": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "messages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ChatMessage"
                    }
                },
                "name": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.Dataset": {
            "description": "Dataset model",
            "type": "object",
            "properties": {
                "alias": {
                    "description": "Alias of the dataset",
                    "type": "string",
                    "example": "sales_data_alias"
                },
                "columns": {
                    "description": "Column definitions of the dataset",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "additionalProperties": {}
                    }
                },
                "created_at": {
                    "description": "Creation timestamp",
                    "type": "string",
                    "example": "2024-02-05T12:00:00Z"
                },
                "created_by": {
                    "description": "CreatedBy represents the user who created the dataset",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "description": {
                    "description": "Description of the dataset",
                    "type": "string",
                    "example": "Sales data for Q1 2024"
                },
                "file_path": {
                    "description": "File path of the dataset",
                    "type": "string",
                    "example": "/data/sales_data.csv"
                },
                "format": {
                    "description": "Format of the dataset (e.g., csv, parquet)",
                    "type": "string",
                    "example": "csv"
                },
                "id": {
                    "description": "Unique identifier of the dataset",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "description": "Name of the dataset",
                    "type": "string",
                    "example": "gp_Dh790Asdf17kd"
                },
                "row_count": {
                    "description": "Number of rows in the dataset",
                    "type": "integer",
                    "example": 1000
                },
                "size": {
                    "description": "Size of the dataset in bytes",
                    "type": "integer",
                    "example": 1048576
                },
                "updated_at": {
                    "description": "Last update timestamp",
                    "type": "string",
                    "example": "2024-02-05T12:00:00Z"
                },
                "updated_by": {
                    "description": "UpdatedBy represents the user who last updated the dataset",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "models.Project": {
            "description": "Project model",
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "Creation timestamp",
                    "type": "string",
                    "example": "2024-02-05T12:00:00Z"
                },
                "created_by": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "description": {
                    "description": "Description of the project",
                    "type": "string",
                    "example": "This is a sample project description"
                },
                "id": {
                    "description": "Unique identifier of the project",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "description": "Name of the project",
                    "type": "string",
                    "example": "My Project"
                },
                "updatedAt": {
                    "description": "Last update timestamp",
                    "type": "string",
                    "example": "2024-02-05T12:00:00Z"
                },
                "updated_by": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "projects.createRequestBody": {
            "description": "Request body for creating a new project",
            "type": "object",
            "required": [
                "created_by",
                "description",
                "name"
            ],
            "properties": {
                "created_by": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "description": {
                    "description": "Description of the project",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 10,
                    "example": "This is a detailed description of my new project"
                },
                "name": {
                    "description": "Name of the project",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "My New Project"
                }
            }
        },
        "projects.updateProjectBody": {
            "description": "Request body for updating an existing project",
            "type": "object",
            "required": [
                "name",
                "updated_by"
            ],
            "properties": {
                "description": {
                    "description": "Description of the project",
                    "type": "string",
                    "maxLength": 500,
                    "example": "Updated project description"
                },
                "name": {
                    "description": "Name of the project",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3,
                    "example": "Updated Project Name"
                },
                "updated_by": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "responses.ErrorResponse": {
            "description": "Error response structure",
            "type": "object",
            "properties": {
                "code": {
                    "description": "Error code",
                    "type": "integer",
                    "example": 400
                },
                "error": {
                    "description": "Error details",
                    "type": "string",
                    "example": "Validation failed"
                },
                "message": {
                    "description": "Error message",
                    "type": "string",
                    "example": "Invalid request parameters"
                }
            }
        },
        "responses.SuccessResponse": {
            "description": "Success response structure with data",
            "type": "object",
            "properties": {
                "data": {
                    "description": "Response data"
                }
            }
        },
        "s3.updateRequestBody": {
            "description": "Request body for updating a dataset from S3",
            "type": "object",
            "required": [
                "alter_column_names",
                "dataset",
                "updated_by"
            ],
            "properties": {
                "alter_column_names": {
                    "description": "Column names to be altered (optional)",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "dataset": {
                    "description": "Name of the dataset to update",
                    "type": "string",
                    "example": "sales_data_table"
                },
                "description": {
                    "description": "Updated description of the dataset (optional)",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 10,
                    "example": "Updated sales data for Q1 2024"
                },
                "file_path": {
                    "description": "S3 path of the new file (optional)",
                    "type": "string",
                    "minLength": 1,
                    "example": "my-bucket/data/updated_sales.csv"
                },
                "updated_by": {
                    "description": "User ID of the updater",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "s3.uploadRequestBody": {
            "description": "Request body for uploading a file from S3",
            "type": "object",
            "required": [
                "alias",
                "alter_column_names",
                "column_descriptions",
                "created_by",
                "file_path",
                "project_id"
            ],
            "properties": {
                "alias": {
                    "description": "Alias of the dataset",
                    "type": "string",
                    "minLength": 3,
                    "example": "sales_data"
                },
                "alter_column_names": {
                    "description": "Column names to be altered",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "column_descriptions": {
                    "description": "Column descriptions",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "created_by": {
                    "description": "User ID of the creator",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "description": {
                    "description": "Description of the dataset",
                    "type": "string",
                    "maxLength": 500,
                    "minLength": 10,
                    "example": "Sales data for Q1 2024"
                },
                "file_path": {
                    "description": "S3 path of the file to upload",
                    "type": "string",
                    "minLength": 1,
                    "example": "my-bucket/data/sales.csv"
                },
                "project_id": {
                    "description": "ID of the project to add the dataset to",
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        }
    }
}