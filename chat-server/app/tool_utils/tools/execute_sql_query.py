from langchain_core.tools import tool

from app.services.gopie.sql_executor import execute_sql


@tool
async def execute_sql_query(
    queries: list[str],
) -> list[dict] | dict:
    """
    Execute a SQL query against the SQL API.

    ONLY use this tool when:
        - The user has provided a SQL query to execute.
        - Execute the query generated by the plan_sql_query tool.

    Args:
        queries: The SQL SELECT query to execute. It can be a list of queries.

    Returns:
        List of result rows as dicts, or a dict with error information.
    """
    try:
        results = []
        for query in queries:
            result = await execute_sql(query)
            results.append(result)
        return results
    except Exception as e:
        return {"error": str(e), "queries": queries}


def get_dynamic_tool_text(args: dict) -> str:
    query_snippets = args.get("queries", [])[:50]
    return f"Executing SQL queries: {query_snippets}..."


__tool__ = execute_sql_query
__tool_category__ = "Data Execution"
__should_display_tool__ = True
__get_dynamic_tool_text__ = get_dynamic_tool_text
