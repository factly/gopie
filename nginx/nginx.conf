events {
    worker_connections 1024;
}

http {
    # Define an upstream for the ZITADEL backend for clarity and flexibility
    upstream zitadel_backend {
        server zitadel:8080;
    }

    server {
        # Use the newer, non-deprecated syntax for enabling HTTP/2
        listen 80;
        http2 on;

        server_name zitadel.gopie.io;

        # Single location block to handle all traffic
        location / {
            # Use grpc_pass to establish an HTTP/2 connection to the backend.
            # ZITADEL's server is smart enough to handle both gRPC and regular
            # HTTP requests (like for the web console) over this connection.
            grpc_pass grpc://zitadel_backend;

            # Use grpc_set_header when using grpc_pass
            grpc_set_header Host $host;
            grpc_set_header X-Real-IP $remote_addr;
            grpc_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            grpc_set_header X-Forwarded-Proto $scheme;
        }
    }
}